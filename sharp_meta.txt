== Physical Plan ==
AdaptiveSparkPlan (32)
+- HashAggregate (31)
   +- Exchange (30)
      +- HashAggregate (29)
         +- Project (28)
            +- SortMergeJoin Inner (27)
               :- Project (21)
               :  +- SortMergeJoin Inner (20)
               :     :- Sort (14)
               :     :  +- Exchange (13)
               :     :     +- Filter (12)
               :     :        +- InMemoryTableScan (1)
               :     :              +- InMemoryRelation (2)
               :     :                    +- * Project (11)
               :     :                       +- * BroadcastHashJoin Inner BuildRight (10)
               :     :                          :- * Project (7)
               :     :                          :  +- * BroadcastHashJoin Inner BuildRight (6)
               :     :                          :     :- * Range (3)
               :     :                          :     +- BroadcastExchange (5)
               :     :                          :        +- * Range (4)
               :     :                          +- BroadcastExchange (9)
               :     :                             +- * Range (8)
               :     +- Sort (19)
               :        +- Exchange (18)
               :           +- Filter (17)
               :              +- InMemoryTableScan (15)
               :                    +- InMemoryRelation (16)
               :                          +- * Project (11)
               :                             +- * BroadcastHashJoin Inner BuildRight (10)
               :                                :- * Project (7)
               :                                :  +- * BroadcastHashJoin Inner BuildRight (6)
               :                                :     :- * Range (3)
               :                                :     +- BroadcastExchange (5)
               :                                :        +- * Range (4)
               :                                +- BroadcastExchange (9)
               :                                   +- * Range (8)
               +- Sort (26)
                  +- Exchange (25)
                     +- Filter (24)
                        +- InMemoryTableScan (22)
                              +- InMemoryRelation (23)
                                    +- * Project (11)
                                       +- * BroadcastHashJoin Inner BuildRight (10)
                                          :- * Project (7)
                                          :  +- * BroadcastHashJoin Inner BuildRight (6)
                                          :     :- * Range (3)
                                          :     +- BroadcastExchange (5)
                                          :        +- * Range (4)
                                          +- BroadcastExchange (9)
                                             +- * Range (8)


(1) InMemoryTableScan
Output [1]: [id#0L]
Arguments: [id#0L], [((id#0L % 5) = 0), ((id#0L % 6) = 0), ((id#0L % 7) = 0)]

(2) InMemoryRelation
Arguments: [id#0L], CachedRDDBuilder(org.apache.spark.sql.execution.columnar.DefaultCachedBatchSerializer@6d9af340,StorageLevel(memory, 1 replicas),*(3) Project [id#0L]
+- *(3) BroadcastHashJoin [id#0L], [id#4L], Inner, BuildRight, false
   :- *(3) Project [id#0L]
   :  +- *(3) BroadcastHashJoin [id#0L], [id#2L], Inner, BuildRight, false
   :     :- *(3) Range (0, 100000, step=2, splits=8)
   :     +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#35]
   :        +- *(1) Range (0, 100000, step=3, splits=8)
   +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#40]
      +- *(2) Range (0, 100000, step=4, splits=8)
,None)

(3) Range [codegen id : 3]
Output [1]: [id#0L]
Arguments: Range (0, 100000, step=2, splits=Some(8))

(4) Range [codegen id : 1]
Output [1]: [id#2L]
Arguments: Range (0, 100000, step=3, splits=Some(8))

(5) BroadcastExchange
Input [1]: [id#2L]
Arguments: HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#35]

(6) BroadcastHashJoin [codegen id : 3]
Left keys [1]: [id#0L]
Right keys [1]: [id#2L]
Join condition: None

(7) Project [codegen id : 3]
Output [1]: [id#0L]
Input [2]: [id#0L, id#2L]

(8) Range [codegen id : 2]
Output [1]: [id#4L]
Arguments: Range (0, 100000, step=4, splits=Some(8))

(9) BroadcastExchange
Input [1]: [id#4L]
Arguments: HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#40]

(10) BroadcastHashJoin [codegen id : 3]
Left keys [1]: [id#0L]
Right keys [1]: [id#4L]
Join condition: None

(11) Project [codegen id : 3]
Output [1]: [id#0L]
Input [2]: [id#0L, id#4L]

(12) Filter
Input [1]: [id#0L]
Condition : ((((id#0L % 5) = 0) AND ((id#0L % 6) = 0)) AND ((id#0L % 7) = 0))

(13) Exchange
Input [1]: [id#0L]
Arguments: hashpartitioning(id#0L, 200), ENSURE_REQUIREMENTS, [id=#93]

(14) Sort
Input [1]: [id#0L]
Arguments: [id#0L ASC NULLS FIRST], false, 0

(15) InMemoryTableScan
Output [1]: [id#13L]
Arguments: [id#13L], [((id#13L % 6) = 0), ((id#13L % 5) = 0)]

(16) InMemoryRelation
Arguments: [id#13L], CachedRDDBuilder(org.apache.spark.sql.execution.columnar.DefaultCachedBatchSerializer@6d9af340,StorageLevel(memory, 1 replicas),*(3) Project [id#0L]
+- *(3) BroadcastHashJoin [id#0L], [id#4L], Inner, BuildRight, false
   :- *(3) Project [id#0L]
   :  +- *(3) BroadcastHashJoin [id#0L], [id#2L], Inner, BuildRight, false
   :     :- *(3) Range (0, 100000, step=2, splits=8)
   :     +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#35]
   :        +- *(1) Range (0, 100000, step=3, splits=8)
   +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#40]
      +- *(2) Range (0, 100000, step=4, splits=8)
,None)

(17) Filter
Input [1]: [id#13L]
Condition : (((id#13L % 6) = 0) AND ((id#13L % 5) = 0))

(18) Exchange
Input [1]: [id#13L]
Arguments: hashpartitioning(id#13L, 200), ENSURE_REQUIREMENTS, [id=#94]

(19) Sort
Input [1]: [id#13L]
Arguments: [id#13L ASC NULLS FIRST], false, 0

(20) SortMergeJoin
Left keys [1]: [id#0L]
Right keys [1]: [id#13L]
Join condition: None

(21) Project
Output [1]: [id#0L]
Input [2]: [id#0L, id#13L]

(22) InMemoryTableScan
Output [1]: [id#17L]
Arguments: [id#17L], [((id#17L % 7) = 0), ((id#17L % 5) = 0), ((id#17L % 6) = 0)]

(23) InMemoryRelation
Arguments: [id#17L], CachedRDDBuilder(org.apache.spark.sql.execution.columnar.DefaultCachedBatchSerializer@6d9af340,StorageLevel(memory, 1 replicas),*(3) Project [id#0L]
+- *(3) BroadcastHashJoin [id#0L], [id#4L], Inner, BuildRight, false
   :- *(3) Project [id#0L]
   :  +- *(3) BroadcastHashJoin [id#0L], [id#2L], Inner, BuildRight, false
   :     :- *(3) Range (0, 100000, step=2, splits=8)
   :     +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#35]
   :        +- *(1) Range (0, 100000, step=3, splits=8)
   +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false]),false), [id=#40]
      +- *(2) Range (0, 100000, step=4, splits=8)
,None)

(24) Filter
Input [1]: [id#17L]
Condition : ((((id#17L % 7) = 0) AND ((id#17L % 5) = 0)) AND ((id#17L % 6) = 0))

(25) Exchange
Input [1]: [id#17L]
Arguments: hashpartitioning(id#17L, 200), ENSURE_REQUIREMENTS, [id=#101]

(26) Sort
Input [1]: [id#17L]
Arguments: [id#17L ASC NULLS FIRST], false, 0

(27) SortMergeJoin
Left keys [1]: [id#0L]
Right keys [1]: [id#17L]
Join condition: None

(28) Project
Output [1]: [id#0L]
Input [2]: [id#0L, id#17L]

(29) HashAggregate
Input [1]: [id#0L]
Keys: []
Functions [1]: [partial_sum(id#0L)]
Aggregate Attributes [1]: [sum#70L]
Results [1]: [sum#71L]

(30) Exchange
Input [1]: [sum#71L]
Arguments: SinglePartition, ENSURE_REQUIREMENTS, [id=#107]

(31) HashAggregate
Input [1]: [sum#71L]
Keys: []
Functions [1]: [sum(id#0L)]
Aggregate Attributes [1]: [sum(id#0L)#22L]
Results [1]: [sum(id#0L)#22L AS sum(id)#23L]

(32) AdaptiveSparkPlan
Output [1]: [sum(id)#23L]
Arguments: isFinalPlan=false


